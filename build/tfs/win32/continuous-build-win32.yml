steps:
- task: NodeTool@0
  inputs:
    versionSpec: "8.9.1"
- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
  inputs:
    versionSpec: "1.3.2"
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { yarn }
  displayName: Install Dependencies
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { yarn gulp electron }
  displayName: Download Electron
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { yarn gulp hygiene }
  displayName: Run Hygiene Checks
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { yarn check-monaco-editor-compilation }
  displayName: Run Monaco Editor Checks
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { yarn compile }
  displayName: Compile Sources
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { yarn download-builtin-extensions }
  displayName: Download Built-in Extensions
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { .\scripts\test.bat --tfs "Unit Tests" }
  displayName: Run Unit Tests
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { .\scripts\test-integration.bat --tfs "Integration Tests" }
  displayName: Run Integration Tests
- powershell: |
    . build/tfs/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    exec { yarn smoketest --screenshots "$(Build.ArtifactStagingDirectory)\artifacts" --log "$(Build.ArtifactStagingDirectory)\artifacts\smoketest.log" }
  displayName: Run Smoke Tests
  continueOnError: true
- task: PublishBuildArtifacts@1
  displayName: Publish Smoketest Artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
    ArtifactName: build-artifacts-win32
    publishLocation: Container
  condition: eq(variables['System.PullRequest.IsFork'], 'False')
- task: PublishTestResults@2
  displayName: Publish Tests Results
  inputs:
    testResultsFiles: '*-results.xml'
    searchFolder: '$(Build.ArtifactStagingDirectory)/test-results'
  condition: succeededOrFailed()
